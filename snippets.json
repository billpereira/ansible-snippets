{
    "New basic playbook with environment and vars": {
        "prefix": "new_basic_playbook_with_vars_n_env",
        "body": [
            "---",
            "- name: $1",
            "  hosts: $2",
            "  gather_facts: ${3|true,false|}",
            "  vars: $4",
            "  environment: ${5:\"{{ environment_vars \\}\\}\"}",
            "  tasks:",
            "    $0"
        ],
        "description": "New playbook structure"
    },
    "New basic playbook ": {
        "prefix": "new_basic_playbook",
        "body": [
            "---",
            "- name: $1",
            "  hosts: $2",
            "  gather_facts: ${3|true,false|}",
            "  tasks:",
            "    $0"
        ],
        "description": "New playbook structure"
    },
    "Standard Variables for Z":{
        "prefix": ["env","var"],
        "body": [
            "---",
			"# System Related Variables",
            "PYZ: \"/usr/local/python/Python-3.8\"",
            "ZOAU: \"/usr/local/zoau\"",
            "ansible_python_interpreter: /usr/local/python/Python-3.8/bin/python3",
            "environment_vars:",
            "  _BPXK_AUTOCVT: \"ON\"",
            "  ZOAU_HOME: \"{{ ZOAU }}\"",
            "  PYTHONPATH: \"{{ ZOAU }}/lib\"",
            "  LIBPATH: \"{{ ZOAU }}/lib:{{ PYZ }}/lib:/lib:/usr/lib:.\"",
            "  PATH: \"{{ ZOAU }}/bin:{{ PYZ }}/bin:/bin:/var/bin\"",
            "  _CEE_RUNOPTS: \"FILETAG(AUTOCVT,AUTOTAG) POSIX(ON)\"",
            "  _TAG_REDIR_ERR: \"txt\"",
            "  _TAG_REDIR_IN: \"txt\"",
            "  _TAG_REDIR_OUT: \"txt\"",
            "  _CC_LIB_PREFIX: \"SYS1\"",
            "  LANG: \"C\"",
			"  $0"
        ],
        "description": "Standard variables of a new playbook for zOS"
    },
	"zos_data_set_sequential": {
		"prefix": "zos_data_set_sequential",
		"body": [
			"- name: $1",
			"  ibm.ibm_zos_core.zos_data_set:",
			"    name: $2",
			"    type: seq",
			"    state: present",
			"",
			"$0"
		],
		"description": "Create a sequential data set if it does not exist"
	},
    "zos_dataset_basic":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_data_set:",
            "    name: ${2:DATASET.NAME}",
            "    type: ${3|KSDS,ESDS,RRDS,LDS,SEQ,PDS,PDSE,LIBRARY,BASIC,LARGE,MEMBER,HFS,ZFS|}",
            "    state: ${4|present,absent,cataloged,uncataloged|}",
            "$0"
        ],
        "description": "zOS Dataset module basic usage ",
        "prefix": "zos_dataset_basic"
    },
	"zos_data_set": {
		"prefix": "zos_data_set",
		"body": [
			"- name: ${1:Working with datasets}",
			"  ibm.ibm_zos_core.zos_data_set:",
			"    name: ${2:Dataset name}",
			"    type: ${3|KSDS,ESDS,RRDS,LDS,SEQ,PDS,PDSE,LIBRARY,BASIC,LARGE,MEMBER,HFS,ZFS|}",
			"    record_format: ${4|FB,VB,FBA,VBA|}",
			"    record_length: ${5:80}",
			"    space_primary: ${6:1}",
			"    space_secondary: ${7:1}",
			"    space_type: ${8|TRK,CYL,K,M,G|}",
			"    replace: ${9|false,true|}",
			"    state: ${10|present,absent,cataloged,uncataloged|}",
			"    # sms_data_class:",
			"    # sms_management_class:",
			"    # sms_storage_class:",
			"    # sms_storage_class:",
			"    # volumes:",
			"",
			"$0"
		],
		"description": "Core dataset snippet"
	},
	"zos_encode": {
		"prefix": "zos_encode",
		"body": [
			"- name: ${1:Task name}",
			"  ibm.ibm_zos_core.zos_encode:",
			"    src: ${2:Source file}",
			"    dest: ${3:Dest file}",
			"    from_encoding: ${4|ISO8859-1,IBM-1047|}",
			"    to_encoding: ${5|IBM-1047,ISO8859-1|}",
			"    # backup: yes",
			"    # backup_compress: yes",
			"    # backup_name: name",
			"$0"
		],
		"description": "Converts the encoding of characters that are read from a UNIX System Services (USS) file or path"
	},
	"zos_job_submit": {
		"prefix": "zos_job_submit",
		"body": [
			"- name: ${1:Task name}",
			"  ibm.ibm_zos_core.zos_job_submit:",
			"    src: ${2:JCL Path/DSN}",
			"    location: ${3|LOCAL,USS,DATA_SET|}",
			"    wait: ${4|true,false|}",
			"    return_output: ${5|true,false|}",
			"    max_rc: ${6:0} #Only checked when wait=true",
			"    # wait_time_s: 60",
			"    # volume: VOLSER",
			"    # encoding:",
			"    #   from: ISO8859-1",
			"    #   to: IBM-037",
			"$0"
		],
		"description": "Submit JCL from DATA_SET , USS, or LOCAL location."
	},
    "zos_apf_prog_update":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_apf:",
            "    name: ${2:DATASET}",
            "    ${3|volume,sms|}: \"${4:******, MCAT, volser or true in case of sms}\"",
            "    state: ${5|present,absent|}",
            "    persistent:",
            "      data_set_name: ${6:DATASET(MEM)}",
            "      marker: ${7:\"/* {mark} SOME COMMENT {timestamp} */\"}",
            "      backup: ${8|true,false|}",
            "$0"
        ],
        "description": "zOS APF adding to prog ",
        "prefix": "zos_apf_prog_update"
    },
    "zos_apf_prog_update_batch":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_apf:",
            "    state: ${5|present,absent|}",
            "    persistent:",
            "      data_set_name: ${6:DATASET(MEM)}",
            "      marker: ${7:\"/* {mark} SOME COMMENT {timestamp} */\"}",
            "      backup: ${8|true,false|}",
            "    batch:",
            "      - library: ${2:DATASET}",
            "        ${3|volume,sms|}: \"${4:******, MCAT, volser or true in case of sms}\"",
            "$0"
        ],
        "description": "zOS APF adding to prog for multiple datasets",
        "prefix": "zos_apf_prog_update_batch"
    },
    "zos_apf_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_apf:",
            "    name: ${2:DATASET}",
            "    ${3|volume,sms|}: \"${4:******, MCAT, volser or true in case of sms}\"",
            "    state: ${5|present,absent|}",
            "$0"
        ],
        "description": "zOS APF simple usage for dynamic change, not adding to prog ",
        "prefix": "zos_apf_simple"
    },
    "zos_backup_restore":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_backup_restore:",
            "    operation: ${2|backup,restore|}",
            "    data_sets:",
			"      include:",
			"        - $3",
			"      exclude:",
			"        - $4",
            "    space: ${5:1}",
            "    space_type: ${6:G}",
            "    backup_name: ${7:PATH or DATASET}",
            "$0"
        ],
        "description": "zOS backup and restore with basics",
        "prefix": "zos_backup_restore"
    },
    "zos_backup_restore_with_volume":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_backup_restore:",
            "    operation: ${2|backup,restore|}",
            "    datasets:",
			"      include:",
			"        - $3",
			"      exclude:",
			"        - $4",
            "    volume: ${5:VOLSER}",
            "    space: ${6:1}",
            "    space_type: ${7:G}",
            "    backup_name: ${8:PATH or DATASET}",
            "$0"
        ],
        "description": "zOS backup and restore with volume",
        "prefix": "zos_backup_restore_with_volume"
    },
    "zos_backup_restore_full_volume":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_backup_restore:",
            "    operation: ${2|backup,restore|}",
            "    volume: ${3:VOLSER}",
            "    full_volume: true",
            "    space: ${4:1}",
            "    space_type: ${5:G}",
            "    backup_name: ${6:PATH or DATASET}",
            "$0"
        ],
        "description": "zOS backup and restore with basics",
        "prefix": "zos_backup_restore_full_volume"
    },
    "zos_backup_sms":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_backup_restore:",
            "    operation: restore",
            "    volume: ${2:VOLSER}",
            "    backup_name: ${3:PATH or DATASET}",
            "    sms_storage_class: ${4:SMSSTOR}",
            "    sms_management_class: ${5:SMSMNGM}",
            "$0"
        ],
        "description": "zOS restore with SMS storage and management classes to use for the restored data sets.",
        "prefix": "zos_backup_sms"
    },
    "zos_blockinfile_insert_update":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_blockinfile:",
            "    src: ${2:PATH or Dataset}",
            "    marker: \"/* {mark} ${3:CUSTOM MSG} */\"",
            "    state: ${4|present,absent|}",
            "    block: |",
            "        ${5:Your text \n         goes here}",
            "$0"
        ],
        "description": "zOS Blockinfile module to update block of text in files.",
        "prefix": "zos_blockinfile_insert_update"
    },
    "zos_blockinfile_insert_after":{
        "body": [
            "- name: \"${1:Add ZOAU path to PATH in /etc/profile}\"",
            "  ibm.ibm_zos_core.zos_blockinfile:",
            "    src: ${2:/etc/profile}",
            "    insertafter: ${3:\"PATH=\"}",
            "    block: |",
            "      ${4:ZOAU=/path/to/zoau_dir/bin\n      export ZOAU\n      PATH=$ZOAU:$PATH}",
            "$0"
        ],
        "description": "zOS Blockinfile module to update block of text in files",
        "prefix": "zos_blockinfile_insert_after"
    },
    "zos_copy_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    ${2|src,content|}: \"${3:full path, variable or dataset}\"",
            "    dest: ${4:DATASET/PATH}",
            "$0"
        ],
        "description": "zOS Copy module to dataset or file ",
        "prefix": "zos_copy_simple"
    },
    "zos_copy_remote":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    src: \"${2:full path}\"",
            "    dest: ${3:DATASET/PATH}",
            "    remote_src: ${4:true}",
            "$0"
        ],
        "description": "zOS Copy module with remote src to dataset or file ",
        "prefix": "zos_copy_remote"
    },
    "zos_copy_binary":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    src: \"${2:full path}\"",
            "    dest: ${3:DATASET/PATH}",
            "    is_binary: ${4:true}",
            "$0"
        ],
        "description": "zOS Copy binary file to dataset or file ",
        "prefix": "zos_copy_binary"
    },
    "zos_copy_follow_link":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    src: \"${2:path/to/link}\"",
            "    dest: ${3:DATASET/PATH}",
            "    local_follow: true",
            "$0"
        ],
        "description": "zOS Copy module to dataset or file using link as src",
        "prefix": "zos_copy_follow_link"
    },
    "zos_copy_encoding":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    src: \"${2:path/to/link}\"",
            "    dest: ${3:DATASET/PATH}",
            "    encoding:",
            "      from: ${4:UTF-8}",
            "      to: ${5:IBM-037}",
            "$0"
        ],
        "description": "zOS Copy module to dataset or file doing encoding",
        "prefix": "zos_copy_encoding"
    },
    "zos_copy_file_with_permissions":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    ${2|src,content|}: \"${3:full path, variable or dataset}\"",
            "    dest: ${4:DATASET/PATH}",
            "    mode: ${5:0750}",
            "    group: ${6:GROUP}",
            "    owner: ${7:OWNER}",
            "$0"
        ],
        "description": "zOS Copy module to file setting permissions and owner",
        "prefix": "zos_copy_file_with_permissions"
    },
    "zos_copy_file_customized_dest":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_copy:",
            "    ${2|src,content|}: \"${3:full path, variable or dataset}\"",
            "    dest: ${4:DATASET}",
            "    dest_data_set:",
            "      type: ${5:SEQ}",
            "      space_primary: ${6:1}",
            "      space_secondary: ${7:1}",
            "      space_type: ${8:K}",
            "      record_format: ${9:FB}",
            "      record_length: ${10:80}",
            "$0"
        ],
        "description": "zOS Copy module to dataset changing allocation parms",
        "prefix": "zos_copy_file_customized_dest"
    },
	"zos_copy_comments": {
		"prefix": "zos_copy_comments",
		"body": [
			"- name: ${1:Task name}",
			"  ibm.ibm_zos_core.zos_copy:",
			"    ${2|src,content|}: \"${3:full path, variable or dataset}\"",
			"    dest: ${4:Destination}",
			"    # backup: ",
			"    # backup_name: ",
			"    # content: ",
			"    # encoding: ",
			"    # force: ",
			"    # ignore_sftp_stderr: ",
			"    # is_binary: ",
			"    # local_follow: ",
			"    # mode: ",
			"    # model_ds: ",
			"    # remote_src: ",
			"    # sftp_port: ",
			"    # validate: ",
			"$0"
		],
		"description": "Copy data to z/OS with commented attributes"
	},
    "zos_lineinfile":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_lineinfile:",
            "    src: ${2:DATASET.NAME.OR.PATH}",
            "    regexp: ${3:'^yourregex'}",
            "    insertafter: ${4:'^yourregex'}",
            "    line: ${5:line to be added}",
            "$0"
        ],
        "description": "zOS Line in file, to manage content of files/datasets ",
        "prefix": "zos_lineinfile"
    },
    "zos_operator":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ibm.ibm_zos_core.zos_operator:",
            "    cmd: ${2:mvs command}",
            "$0"
        ],
        "description": "zOS Operator module to send mvs commands",
        "prefix": "zos_operator"
    },
	"zos_mvs_raw": {
		"prefix": "zos_mvs_raw",
		"body": [
			"- name: $1",
			"  ibm.ibm_zos_core.zos_mvs_raw:",
			"    program_name: ${2:idcams}",
			"    # parm:",
			"    # auth:",
			"    dds:",
			"      $0"
		],
		"description": "Run a z/OS program"
	},
	"zos_mvs_raw_dd_concat": {
		"prefix": "DD_CONCAT",
		"body": [
			"- dd_concat:",
			"    dd_name: ${1:concat}",
			"    dds:",
			"      $0"
		],
		"description": "dd_concat is used to specify a data set concatenation"
	},
	"zos_mvs_raw_dd_data_set": {
		"prefix": "DD_DATA_SET",
		"body": [
			"- dd_data_set:",
			"    dd_name: ${1:DD Name}",
			"    data_set_name: ${2:DATA.SET.NAME}",
			"  $0"
		],
		"description": "dd_data_set is used to specify a data set"
	},
	"zos_mvs_raw_dd_dummy": {
		"prefix": "DD_DUMMY",
		"body": [
			"- dd_dummy:",
			"    dd_name: ${1:DD Name}",
			"  $0"
		],
		"description": "dd_dummy accepts no content input."
	},
	"zos_mvs_raw_dd_input": {
		"prefix": "DD_INPUT",
		"body": [
			"- dd_input:",
			"    dd_name: ${1:DD Name}",
			"    content:",
			"      - ${2:Can be single line or list of lines}",
			"  $0"
		],
		"description": "dd_input is used to specify an in-stream data set."
	},
	"zos_mvs_raw_dd_output": {
		"prefix": "DD_OUTPUT",
		"body": [
			"- dd_output:",
			"    dd_name: ${1:DD Name}",
			"    return_content:",
			"      type: ${2|text,base64|}",
			"  $0"
		],
		"description": "Use dd_output to specify - Content sent to the DD should be returned to the user."
	},
	"zos_mvs_raw_dd_unix": {
		"prefix": "DD_UNIX",
		"body": [
			"- dd_unix:",
			"    dd_name: ${1:DD Name}",
			"    path: ${2:/path/to/file}",
			"  $0"
		],
		"description": "The path to a file in UNIX System Services (USS)."
	},
	"zos_mvs_raw_dd_vio": {
		"prefix": "DD_VIO",
		"body": [
			"- dd_vio:",
			"    dd_name: ${1:DD Name}",
			"  $0"
		],
		"description": "dd_vio is used to handle temporary data sets."
	},
	"zos_fetch": {
		"prefix": "zos_fetch",
		"body": [
			"- name: $1",
			"  ibm.ibm_zos_core.zos_fetch:",
			"    src: ${2:Name of a UNIX System Services (USS) file, PS(sequential data set), PDS, PDSE, member to be fetched}",
			"    dest: ${3:Local path where the file or data set will be stored}",
			"    flat: ${4|true,false|}",
			"    is_binary: ${5|true,false|}",
			"    validate_checksum: ${6|true,false|}",
			"$0"
		],
		"description": "Fetch data from z/OS"
	},
	"zos_find": {
		"prefix": "zos_find",
		"body": [
			"- name: $1",
			"  ibm.ibm_zos_core.zos_find:",
			"    patterns:",
			"      - ${2:IMS.LIB.*}",
			"    contains: ${3:REXX}",
			"    # excludes: ",
			"    # volumes: ",
			"    # resource_type: cluster ",
			"$0"
		],
		"description": "find data on z/OS"
	},
	"zos_job_output": {
		"prefix": "zos_job_output",
		"body": [
			"- name: ${1:JES Job output with all ddnames}",
			"  ibm.ibm_zos_core.zos_job_output:",
			"    job_id: ${2:\"STC*\"}",
			"    job_name: ${3:\"*\"}",
			"    owner: ${4:\"IBMUSER\"}",
			"    ddname: ${5:\"?\"}",
			"$0"
		],
		"description": "Display job output"
	},
	"zos_job_query": {
		"prefix": "zos_job_query",
		"body": [
			"- name: ${1:list zos jobs}",
			"  ibm.ibm_zos_core.zos_job_query:",
			"    job_id: ${2:\"\"}",
			"    job_name: ${3:\"\"}",
			"    owner: ${4:\"\"}",
			"$0"
		],
		"description": "List z/OS job(s) and the current status"
	},
	"zos_ping": {
		"prefix": "ZOS_PING",
		"body": [
			"- name: ${1:Ping the z/OS host and perform resource checks}",
			"  ibm.ibm_zos_core.zos_ping:",
			"  register: ${2:result}",
			"$0"
		],
		"description": "Ping z/OS and check dependencies"
	},
	"zos_mount_basic": {
		"prefix": "zos_mount_basic",
		"body": [
			"- name: ${1:Mount a filesystem}",
			"  ibm.ibm_zos_core.zos_mount:",
			"    src: ${2:SOMEUSER.VVV.ZFS}",
			"    path: ${3:/u/omvsadm/core}",
			"    fs_type: ${4|HFS,ZFS,NFS,TFS|}",
			"    state: ${5|absent, mounted, unmounted, present, remounted|}",
			"$0"
		],
		"description": "Ping z/OS and check dependencies"
	},
	"zos_tso_command": {
		"prefix": "ZOS_TSO_COMMAND",
		"body": [
			"- name: ${1:Issue TSO commands}",
			"  ibm.ibm_zos_core.zos_tso_command:",
			"    commands:",
			"      - $2",
			"$0"
		],
		"description": "Execute TSO commands"
	},
    "Setting Fact":{
        "prefix": "set_fact",
        "body": [
            "- name: ${1:Task name}",
            "  ansible.builtin.set_fact:",
            "    ${2:variable}: $0"
        ],
        "description": "set_fact module"
    },
	
	"template": {
		"prefix": "TEMPLATE",
		"body": [
			"- name: ${1:Task name}",
			"  ansible.builtin.template:",
			"    src: ${2:Template source}",
			"    dest: ${3:Src}",
			"    # owner: bin",
			"    # group: wheel",
			"    # mode: '0644'",
			"$0"
		],
		"description": "Template module"
	},
	"file": {
		"prefix": "file",
		"body": [
			"- name: ${1:Task name}",
			"  ansible.builtin.file:",
			"    path: ${2:/path}",
			"    mode: ${3:'0644'}",
			"    state: ${4|absent,directoy,file,hard,link,touch|}",
			"$0"
		],
		"description": "file module"
	},
	"user_with_sshkey": {
		"prefix": "user_with_sshkey",
		"body": [
			"- name: ${1:Task name}",
			"  ansible.builtin.user:",
			"    name: ${2:userid}",
			"    comment: ${3:some comment}",
			"    generate_ssh_key: ${4|true, false|}",
			"    shell: ${5:/bin/bash|}",
			"  become: true",
			"$0"
		],
		"description": "User module with private key generated under .ssh"
	},
	"user_removal": {
		"prefix": "user_removal",
		"body": [
			"- name: ${1:Task name}",
			"  ansible.builtin.user:",
			"    name: ${2:userid}",
			"    state: absent",
			"    remove: true",
			"  become: true",
			"$0"
		],
		"description": "User module to delete user and it's directory"
	},
	"apt": {
		"prefix": "apt",
		"body": [
			"- name: ${1:Install apache httpd  (state=present is optional)}",
			"  ansible.builtin.apt:",
			"    name: ${2:apache2}",
			"    state: ${3|absent,build-dep,latest,present,fixed|}",
			"$0"
		],
		"description": "apt module"
	},
	"fetch": {
		"prefix": "fetch",
		"body": [
			"- name: ${1:Fetch file from server}",
			"  ansible.builtin.fetch:",
			"    src: ${2:path}",
			"    dest: ${3:path}",
			"    flat: true",
			"$0"
		],
		"description": "apt module"
	},
    "copy_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ansible.builtin.copy:",
            "    ${2|src,content|}: \"${3:Content or path}\"",
            "    dest: ${4:PATH}",
            "$0"
        ],
        "description": "Copy module",
        "prefix": "copy_simple"
    },
    "pip_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ansible.builtin.pip:",
            "    name: ${2:package}",
            "$0"
        ],
        "description": "pip module",
        "prefix": "pip_simple"
    },
    "shell_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ansible.builtin.shell: ${2:ls -al}",
            "$0"
        ],
        "description": "pip module",
        "prefix": "shell_simple"
    },
    "cron_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ansible.builtin.cron:",
            "    name: \"${2:Entry name}\"",
            "    minute: ${3:*}",
            "    hour: ${4:*}",
            "    weekday: ${5:*}",
            "    job: ${6:''}",
            "    state: ${7|absent,present|}",
            "$0"
        ],
        "description": "Cron module",
        "prefix": "cron_simple"
    },
	"debug": {
		"prefix": "DEBUG",
		"body": [
			"- name: $1",
			"  ansible.builtin.debug:",
			"    ${2|msg,var|}: $3",
			"$0"
		],
		"description": "Print message"
	},
    "Lineinfile":{
        "body": [
            "- name: $1",
            "  ansible.builtin.lineinfile:",
            "    path: $2",
            "    line: ${3:\"{{item\\}\\}\"}",
            "    create: ${4|true,false|}",
            "  with_items:",
            "    - \"$5\"",
            "$0"
        ],
        "description": "lineinfile with items module",
        "prefix": "lineinfile_items"
    },
    "URI":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  ansible.builtin.uri:",
            "    url: \"${2:url}\"",
            "    method: ${3|GET,POST,PUT,HEAD,DELETE,OPTIONS,PATCH,TRACE,CONNECT,REFRESH|}",
            "    validate_certs: ${4|true,false|}",
            "    body_format: ${5|form-urlencoded,form-multipart,json,raw|}",
            "    body:",
            "      ${6:# Body fields}",
            "    headers:",
            "      ${7:# Header fields}",
            "    dest: ${8:/path/for/download}",
            "$0"
        ],
        "description": "",
        "prefix": "uri"
    },
    "Lookup CSV":{
        "body": "\"{{ lookup('csvfile','new file=${1:/path/tofile} delimiter=${2:;} col=${3:1}') }}\"$0",
        "description": "Lookup module for CSV files",
        "prefix": "lookup_csv"
    },
    "Lookup FILE":{
        "body": "\"{{ lookup('file','${1:/path/tofile}') }}\"$0",
        "description": "Simple lookup to get content from file",
        "prefix": "lookup_file"
    },
    "Lookup INI":{
        "body": "\"{{ lookup('ini','${1:KEY} section=${2:SECTION} file=${3:/path/tofile}') }}\"$0",
        "description": "Lookup module for INI files",
        "prefix": "lookup_ini"
    },
    "Delegate to":{
        "body": "delegate_to: ${1:localhost} $0",
        "description": "delegate to property to specify host responsible for task",
        "prefix": "delegate"
    },
    "register":{
        "body": "register: ${1:fact_name} $0",
        "description": "Register task output to fact",
        "prefix": "register"
    },
    "Run once":{
        "body": "run_once: ${1|true,false|}",
        "description": "Specify if task has to be executed only once",
        "prefix": "run_once"
    },
    "Include Role":{
        "body": [
            "- name: \"${1:Task description}\"",
            "  include_role:",
            "    name: ${2:role_name}"
        ],
        "description": "Include role statement",
        "prefix": "inc_role"
    },
    "Include Tasks":{
        "body": [
            "- name: $1",
            "  include_tasks: $0",
            ""
        ],
        "description": "Include tasks statement",
        "prefix": "inc_task"
    },
    "openssh_keypair_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.openssh_keypair:",
            "    path: $2",
            "    passphrase: $3",
            "    size: ${4:2048}",
            "    type: ${5|rsa,dsa,ecdsa,ed25519|}",
            "    force: ${6|true,false|}",
            "$0"
        ],
        "description": "Openssl Key Pair module",
        "prefix": "openssh_keypair_simple"
    },
    "openssl_csr_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.openssl_csr:",
            "    path: $2",
            "    privatekey_path: $3",
            "    privatekey_passphrase: $4",
            "    country_name: $5",
            "    organization_name: $6",
            "    email_address: $7",
            "    common_name: $8",
            "    subject_alt_name: $9",
            "$0"
        ],
        "description": "Openssl CSR module",
        "prefix": "openssl_csr_simple"
    },
    "openssl_privatekey_simple":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.openssl_privatekey:",
            "    path: $2",
            "    passphrase: $3",
            "    size: ${4:2048}",
            "$0"
        ],
        "description": "Openssl Private Key module",
        "prefix": "openssl_privatekey_simple"
    },
    "openssl_pkcs12_export":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.openssl_pkcs12:",
            "    action: export",
            "    path: $2",
            "    ${3|privatekey_path,privatekey_content|}: $4",
            "    certificate_path: $5",
            "    passphrase: $6",
            "$0"
        ],
        "description": "Openssl PKCS#12 Key module",
        "prefix": "openssl_pkcs12_export"
    },
    "openssl_pkcs12_parse":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.openssl_pkcs12:",
            "    action: parse",
            "    src: $2",
            "    path: $3",
            "    passphrase: $4",
            "$0"
        ],
        "description": "Openssl PKCS#12 Key module",
        "prefix": "openssl_pkcs12_parse"
    },
    "x509_certificate_self_signed":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.x509_certificate:",
            "    path: $2",
            "    privatekey_path: $3",
            "    csr_path: $4",
            "    provider: selfsigned",
            "$0"
        ],
        "description": "Openssl x509 Certificate Key module",
        "prefix": "x509_certificate_self_signed"
    },
    "x509_certificate_ownca":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  community.crypto.x509_certificate:",
            "    path: $2",
            "    csr_path: $3",
            "    ownca_privatekey_path: $4",
            "    ownca_path: $5",
            "    provider: ownca",
            "$0"
        ],
        "description": "Openssl x509 Certificate Key module",
        "prefix": "x509_certificate_ownca"
    },
    "aws_ec2_instance_basic":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  amazon.aws.ec2_instance:",
            "    instance_type: ${2:t2.micro}",
            "    image_id: ${3:ami-0caef02b518350c8b}",
            "    region: ${4:eu-central-1}",
            "    key_name: $5",
            "    wait: ${6:true}",
            "    network:",
            "      assign_public_ip: ${7:true}",
            "      security_group: ${8:default}",
            "    count: $9",
            "    state: ${10:present}",
            "    name: $11",
            "    aws_access_key: \"{{ aws_access_key }}\"",
            "    aws_secret_key: \"{{ aws_secret_key }}\"",
            "$0"
        ],
        "description": "AWS EC2 Instance module",
        "prefix": "aws_ec2_instance_basic"
    },
    "aws_s3_basic":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  amazon.aws.aws_s3:",
            "    bucket: $2",
            "    object: $3",
            "    src: $4",
            "    mode: ${5|get,put,delete,create,geturl,getstr,delobj,list,copy|}",
            "    aws_access_key: \"{{ aws_access_key }}\"",
            "    aws_secret_key: \"{{ aws_secret_key }}\"",
            "$0"
        ],
        "description": "AWS S3 Bucket module",
        "prefix": "aws_s3_basic"
    },
    "aws_s3_bucket_basic":{
        "body": [
            "- name: \"${1:Task name}\"",
            "  amazon.aws.s3_bucket:",
            "    name: $2",
            "    state: ${3|present,absent|}",
            "    versioning: ${4|false,true|}",
            "    aws_access_key: \"{{ aws_access_key }}\"",
            "    aws_secret_key: \"{{ aws_secret_key }}\"",
            "$0"
        ],
        "description": "AWS S3 Bucket module",
        "prefix": "aws_s3_bucket_basic"
    },
    "aws_s3_create_and_upload":{
        "body": [
            "- name: \"${1:Create bucket}\"",
            "  amazon.aws.s3_bucket:",
            "    name: $2",
            "    state: present",
            "    versioning: ${3|false,true|}",
            "    aws_access_key: \"{{ aws_access_key }}\"",
            "    aws_secret_key: \"{{ aws_secret_key }}\"",
            "",
            "- name: \"${4:Upload object}\"",
            "  amazon.aws.aws_s3:",
            "    bucket: $2",
            "    object: $5",
            "    src: $6",
            "    mode: put",
            "    aws_access_key: \"{{ aws_access_key }}\"",
            "    aws_secret_key: \"{{ aws_secret_key }}\"",
            "$0"
        ],
        "description": "AWS S3 Bucket module",
        "prefix": "aws_s3_create_and_upload"
    },
    "posix_acl_simple":{
        "body": [
            "- name: \"${1:Set ACL}\"",
            "  ansible.posix.acl:",
            "    path: $2",
            "    entity: ${3:user or group}",
            "    etype: ${4|group, mask, other, user|}",
            "    permissions: $5",
            "    state: ${6|present, absent, query|}",
            "    recursive: ${7|true, false|}",
            "$0"
        ],
        "description": "Module to work with posix ACL",
        "prefix": "posix_acl_simple"
    }
}
